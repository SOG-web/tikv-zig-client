.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = .client_zig,
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",
    // Together with name, this represents a globally unique package
    // identifier. This field is generated by the Zig toolchain when the
    // package is first created, and then *never changes*. This allows
    // unambiguous detection of one package being an updated version of
    // another.
    //
    // When forking a Zig project, this id should be regenerated (delete the
    // field and run `zig build`) if the upstream project is still maintained.
    // Otherwise, the fork is *hostile*, attempting to take control over the
    // original project's identity. Thus it is recommended to leave the comment
    // on the following line intact, so that it shows up in code reviews that
    // modify the field.
    .fingerprint = 0xe66a8325127bcb3b, // Changing this has security and trust implications.
    // Tracks the earliest Zig version that the package considers to be a
    // supported use case.
    .minimum_zig_version = "0.15.1",
    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .logz = .{
            .url = "https://github.com/karlseguin/log.zig/archive/refs/heads/master.tar.gz",
            .hash = "logz-0.0.0-O9YWXrJKAgBA98lbuTKXADVOR1ULzRGLMzrj1dkduNAF",
        },
        .metrics = .{
            .url = "https://github.com/karlseguin/metrics.zig/archive/refs/heads/master.tar.gz",
            .hash = "metrics-0.0.0-W7G4eP2_AQBKsaql3dhLJ-pkf-RdP-zV3vflJy4N34jC",
        },
        .toml = .{
            .url = "https://github.com/sam701/zig-toml/archive/refs/heads/master.tar.gz",
            .hash = "toml-0.3.0-bV14BTd8AQA-wZERtB3dvRE3eSZ-m48AyXFUGkZ_Tm3d",
        },
        // External protobuf implementation for Zig 0.15.1
        .protobuf = .{
            .url = "https://github.com/mochalins/zig-protobuf/archive/refs/heads/root_namespace.tar.gz",
            // NOTE: Replace the placeholder hash below by running:
            //   zig build --fetch
            // Zig will report the expected hash for this URL; copy it here.
            .hash = "protobuf-2.0.0-0e82ak3SJABcjHscc-uHHWL9jKlX4WgHjwN_piBnJPSK",
        },
        // .grpc_zig = .{
        //     .url = "https://github.com/ziglana/gRPC-zig/archive/refs/heads/main.tar.gz",
        //     .hash = "grpc_zig-0.1.0-AAAAANKhAADRFh5V0-uEaCXOAnqtsjZEx01uUun3cbHp",
        // },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // For example...
        //"LICENSE",
        //"README.md",
    },
}
